plugins {
    id "fabric-loom"
    id "com.github.johnrengelman.shadow" version "5.0.0"
}

minecraft {
    accessWidener = file("src/main/resources/lightoverlay.accesswidener")
}

processResources {
    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
    inputs.property "version", project.version
}

configurations {
    shadow
}

dependencies {
    minecraft "com.mojang:minecraft:${rootProject.architect.minecraft}"
    mappings minecraft.officialMojangMappings()
    modCompile "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"

    modCompile "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"
    modCompile("me.shedaniel.cloth.api:cloth-client-events-v0:${rootProject.cloth_version}") {
        transitive = false
    }
    modImplementation("me.shedaniel.cloth:config-2:${rootProject.cloth_config_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    modImplementation("io.github.prospector:modmenu:${rootProject.modmenu_version}") {
        transitive = false
    }
    include("me.shedaniel.cloth.api:cloth-client-events-v0:${rootProject.cloth_version}") {
        transitive = false
    }
    include("me.shedaniel.cloth:config-2:${rootProject.cloth_config_version}") {
        transitive = false
    }

    compile(project(":common")) {
        transitive = false
    }
    shadow(project(":common")) {
        transitive = false
    }
}

shadowJar {
    relocate "me.shedaniel.lightoverlay.common", "me.shedaniel.lightoverlay.common.fabric"

    configurations = [project.configurations.shadow]
    classifier "shadow"
}

remapJar {
    dependsOn(shadowJar)
    input.set(shadowJar.archivePath)
}